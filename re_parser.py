import re
import pprint

def parse_budget_codes(text_input: str | list) -> list[dict[str, str]]:
    """
    Извлекает коды и наименования из текста с помощью регулярных выражений.
    Функция может принимать на вход как строку, так и список строк.

    Args:
        text_input: Строка или список строк, содержащие слабоструктурированный
                    текст с кодами и наименованиями.

    Returns:
        Список словарей, где каждый словарь содержит 'code' и 'name'.
    """
    # Если на вход пришел список, объединяем его в одну строку
    if isinstance(text_input, list):
        text = "".join(text_input)
    else:
        text = text_input

    # Паттерн ищет комбинацию кода и следующего за ним наименования.
    # re.DOTALL позволяет символу '.' соответствовать также и символу переноса строки.
    #
    # Объяснение паттерна:
    # (\d[\d\s]{15,}\d) - группа для 'code': последовательность цифр и пробелов
    #                     длиной более 15, начинающаяся и заканчивающаяся цифрой.
    # \s+               - один или несколько пробельных символов между кодом и наименованием.
    # ([А-Яа-яЁё(].*?)  - группа для 'name': начинается с русской буквы или '(',
    #                     далее любые символы (ленивый захват).
    # (?=...|\Z)        - просмотр вперед: ищем до тех пор, пока не встретим
    #                     начало следующего кода или конец строки, не включая их в результат.
    pattern = re.compile(r'(\d[\d\s]{15,}\d)\s+([А-Яа-яЁё(].*?)(?=\d[\d\s]{15,}\d|\Z)', re.DOTALL)

    matches = pattern.findall(text)

    result_list = []
    for code, name in matches:
        # Очистка строк от лишних пробелов и переносов
        cleaned_code = ' '.join(code.strip().split())
        cleaned_name = ' '.join(name.strip().split())
        result_list.append({
            "code": cleaned_code,
            "name": cleaned_name
        })

    return result_list

# ВАШ ПРИМЕР: входные данные в виде списка строк
input_list = ['2556\n', 'Приложение № 2\nк приказу Министерства финансов\nРоссийской Федерации\nот 10.06.2025 № 70н\n', 'ПЕРЕЧЕНЬ КОДОВ ПОДВИДОВ ПО ВИДАМ ДОХОДОВ, ГЛАВНЫМИ \nАДМИНИСТРАТОРАМИ КОТОРЫХ ЯВЛЯЮТСЯ ОРГАНЫ \nГОСУДАРСТВЕННОЙ ВЛАСТИ (ГОСУДАРСТВЕННЫЕ ОРГАНЫ) \nРОССИЙСКОЙ ФЕДЕРАЦИИ, ЦЕНТРАЛЬНЫЙ БАНК РОССИЙСКОЙ \nФЕДЕРАЦИИ, ОРГАНЫ УПРАВЛЕНИЯ ГОСУДАРСТВЕННЫМИ \nВНЕБЮДЖЕТНЫМИ ФОНДАМИ РОССИЙСКОЙ ФЕДЕРАЦИИ И \n(ИЛИ) НАХОДЯЩИЕСЯ В ИХ ВЕДЕНИИ КАЗЕННЫЕ УЧРЕЖДЕНИЯ, \nИНЫЕ ОРГАНИЗАЦИИ, НАДЕЛЕННЫЕ ПОЛНОМОЧИЯМИ \nГЛАВНОГО АДМИНИСТРАТОРА ДОХОДОВ ФЕДЕРАЛЬНОГО \nБЮДЖЕТА\n', 'Код\n', 'Наименование кода поступлений в бюджет, \nгруппы, подгруппы, статьи, подстатьи, \nэлемента, группы подвида, аналитической \nгруппы подвида доходов\n', '000\n', '1 00 00000 00 0000 000 НАЛОГОВЫЕ   И   НЕНАЛОГОВЫЕ \n', 'ДОХОДЫ\n', '000\n', '1 01 00000 00 0000 000 НАЛОГИ НА ПРИБЫЛЬ, ДОХОДЫ\n']

# Теперь функция корректно обработает список
parsed_data = parse_budget_codes(input_list)

# Выводим результат
pprint.pprint(parsed_data)